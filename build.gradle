// -- common configuration
subprojects {
    apply plugin: 'base'

    // the projects exclude `markdown` is Java project,
    // and versioned as v0.1.0.
    if (project.name != 'markdown') {
        apply plugin: 'java'

        version = '0.1.0'
    }
}

// -- subproject configuration and
// definition of their dependencies

// Main application satisfying the homework requirements.
project(':app') {
    // `app` has main class the entry point of the application.
    apply plugin: 'application'
    mainClassName = 'app.DrawRegularPolygon'

    // `app` depends on `lib`
    dependencies {
        compile project(':lib')
    }
}

// Turtle graphics library used by `app`.
project(':lib') {
    // `lib` depends on `external`
    dependencies {
        compile project(':external')
    }
}

// External library (tg) used as underfoot of `lib`.
// project(':external')
// note.
//      Their is nothing to configure about `external`,
//      because whole things have done in the subprojects
//      configuration of the root project. (see the top of
//      this file.)

// Interpolating the source codes into markdown to be converted pdf to submit.
project(':markdown') {
    // `markdown` has task that interpolating source codes into the template markdown.
    // This task requires clean the project before running.
    task generate(type: Copy, dependsOn: 'clean') {
        // Set target derectory.
        ext.targetDir = buildDir
        into("$targetDir")

        // Helper method to generate markdown code block.
        ext.codeBlock = { type, path
            -> """#### `./$path`

```$type
${ new File("$rootDir/$path").getText() }```
"""
        }

        // Copy data under src/data.
        from('src/data') {
            into('data')
        }

        from('src/template.md') {
            // Target file name.
            rename {_ -> 'e1619'}

            // Rule of interpolation.
            expand (
                codeBlock: ext.codeBlock,
                javaCode: { subproject, pathUnderJavaMainSrc ->
                    ext.codeBlock('java', "$subproject/src/main/java/$pathUnderJavaMainSrc")
                },
                dataFile: { path -> new File("$targetDir/data", path).getText() },
            )
        }
    }
}
